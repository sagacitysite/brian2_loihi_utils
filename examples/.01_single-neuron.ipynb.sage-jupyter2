{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":172793856},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1619705697691,"exec_count":2,"id":"d90910","input":"\"\"\"\nDefine a neuron group\n\"\"\"\n\n# Define a single neuron\nloihi_group = LoihiNeuronGroup(\n    1,\n    refractory=2,\n    threshold_v_mant=400,\n    decay_v=1024,\n    decay_I=1024\n)","kernel":"python3","no_halt":true,"pos":1,"start":1619705697681,"state":"done","type":"cell"}
{"cell_type":"code","end":1619705697829,"exec_count":3,"id":"26042d","input":"\"\"\"\nDefine input generators and spike times\n\"\"\"\n\n# Excitatory input spikes\nex_neuron_indices = [0, 0, 0, 0]\nex_spike_times = [12, 14, 40, 80]\n\n# Inhibitory input spikes\nin_neuron_indices = [0, 0, 0]\nin_spike_times = [50, 60, 90]\n\n# Define spike generators\ngenerator_ex = LoihiSpikeGeneratorGroup(1, ex_neuron_indices, ex_spike_times)\ngenerator_in = LoihiSpikeGeneratorGroup(1, in_neuron_indices, in_spike_times)","kernel":"python3","no_halt":true,"pos":2,"start":1619705697695,"state":"done","type":"cell"}
{"cell_type":"code","end":1619705706069,"exec_count":4,"id":"261e15","input":"\"\"\"\nDefine synapses and connect\n\"\"\"\n\n# Connect excitatory generator with neuron\nsyn_ex = LoihiSynapses(generator_ex, loihi_group)\nsyn_ex.connect()\nsyn_ex.w = 124\n\n# Connect inhibitory generator with neuron\nsyn_in = LoihiSynapses(generator_in, loihi_group)\nsyn_in.connect()\nsyn_in.w = 124","kernel":"python3","no_halt":true,"pos":3,"start":1619705697887,"state":"done","type":"cell"}
{"cell_type":"code","end":1619705706079,"exec_count":5,"id":"a530b6","input":"\"\"\"\nDefine probes using state monitors\n\"\"\"\n\n# Probe synaptic input using a state monitor\nmon_I = LoihiStateMonitor(loihi_group, 'I')\n# Probe voltage using a state monitor\nmon_v = LoihiStateMonitor(loihi_group, 'v')","kernel":"python3","no_halt":true,"pos":4,"start":1619705706073,"state":"done","type":"cell"}
{"cell_type":"code","end":1619705717970,"exec_count":6,"id":"c5adbd","input":"\"\"\"\nDefine a network and perform simulation\n\"\"\"\n\n# NOTE: It is important to use the LoihiNetwork,\n#       using Brian's magic network is not provided\nnet = LoihiNetwork(\n    loihi_group,\n    generator_in,\n    generator_ex,\n    syn_ex,\n    syn_in,\n    mon_I,\n    mon_v\n)\n\n# Run the simulation\nnet.run(100, report='text')","kernel":"python3","no_halt":true,"output":{"0":{"name":"stdout","text":"Starting simulation at t=0. s for a duration of 100. ms\n"},"1":{"name":"stdout","text":"100. ms (100%) simulated in < 1s\n"}},"pos":5,"start":1619705706082,"state":"done","type":"cell"}
{"cell_type":"code","end":1619705718427,"exec_count":7,"id":"111c8d","input":"\"\"\"\nPlot results\n\"\"\"\n\n# Plot synaptic input (current)\nplt.plot(mon_I.I[0])\nplt.title('Synaptic input / Current')\npl = plt.show()\n\n# Plot voltage\nplt.plot(mon_v.v[0])\nplt.title('Voltage')\npl = plt.show()\n\n# Plot spikes","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"f52c33b90154e112bd89464bd93788bd060ba8c0","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"image/png":{"height":263,"width":390}}},"1":{"data":{"image/png":"6d10bebb4ea6ab64b0bd93242a7c8d62b615e7df","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"image/png":{"height":263,"width":390}}}},"pos":6,"start":1619705717980,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"3235b0","input":"# Import modules\nimport matplotlib.pyplot as plt\nfrom brian2_loihi import *","kernel":"python3","no_halt":true,"pos":0,"state":"done","type":"cell"}
{"id":0,"time":1619705613463,"type":"user"}
{"last_load":1619705613950,"type":"file"}